name: Create and publish a Docker image

on:
  push:
    branches: ['develop']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME_ROS2: ${{ github.repository }}-ROS2

jobs:
  build-and-push-ros-releases:
    strategy:
      fail-fast: false
      matrix:
        ros-distro: [ foxy, noetic ]
        build_type: [Release, RelWithDebInfo]
    runs-on: windows-2019
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            c:/.hunter
            c:/opt/chocolatey
          key: ${{ runner.os }}-${{matrix.ros-distro}}-${{ hashFiles('**/lockfiles') }}
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Install noetic
        if: ${{ matrix.ros-distro  == 'noetic' }}
        run: |
          mkdir c:\opt\chocolatey
          set ChocolateyInstall=c:\opt\chocolatey
          choco source add -n=ros-win -s="https://aka.ms/ros/public" --priority=1
          choco upgrade ros-noetic-desktop_full -y --execution-timeout=0      --no-progress
          echo "ROS_PATH=c:\opt\ros\noetic\x64" >> $env:GITHUB_ENV
      - name: Install foxy
        if: ${{ matrix.ros-distro  != 'noetic' }}
        run: |
          mkdir c:\opt\chocolatey
          set ChocolateyInstall=c:\opt\chocolatey
          choco source add -n=ros-win -s="https://aka.ms/ros/public" --priority=1
          choco upgrade ros-foxy-desktop -y --execution-timeout=0      --no-progress
          echo "ROS_PATH=c:\opt\ros\foxy\x64" >> $env:GITHUB_ENV

      - name: Run cmake
        run: |
          md c:\build-${{matrix.ros-distro}}
          cd c:\build-${{matrix.ros-distro}}
          ${{ env.ROS_PATH }}/setup.ps1
          dir env:          
          dir -s ${{ env.ROS_PATH }}/share
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_DEPTHAI=ON -B c:\build-${{matrix.ros-distro}} -S ${{ github.workspace }}
          
          cmake --build c:\build-${{matrix.ros-distro}} -t autonode --config ${{ matrix.build_type }}
          cmake --build c:\build-${{matrix.ros-distro}} -t install --config ${{ matrix.build_type }}
      - name: Create artifacts (Release)
        uses: actions/upload-artifact@v3
        with:
          name: build-${{matrix.ros-distro}}-${{ matrix.build_type }}
          path: |
            c:\build-${{matrix.ros-distro}}\install

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker (ROS2)
        id: meta_ros2
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_ROS2 }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (ROS2)
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile.ros2
          push: true
          tags: ${{ steps.meta_ros2.outputs.tags }}
          labels: ${{ steps.meta_ros2.outputs.labels }}
