name: Create and publish binaries

on:
  push:
    branches: ['develop']

jobs:
  build-and-push-ros-releases:
    strategy:
      fail-fast: false
      matrix:
        ros-distro: [ foxy, noetic ]
        build_type: [Release, RelWithDebInfo]
    runs-on: windows-2019
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            c:/opt/
            C:/.hunter
          key: ${{ runner.os }}-${{matrix.ros-distro}}-${{ matrix.build_type }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.ros-distro}}-${{ matrix.build_type }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.21.x'
      - name: Install noetic
        if: ${{ matrix.ros-distro  == 'noetic' }}
        run: |
          New-Item -ItemType Directory -Force -Path c:\opt\chocolatey
          set ChocolateyInstall=c:\opt\chocolatey
          dir c:\opt
          choco config set cacheLocation c:\opt\chocolatey\cache
          choco source add -n=ros-win -s="https://aka.ms/ros/public" --priority=1
          choco upgrade ros-noetic-desktop_full -y --execution-timeout=0      --no-progress
          echo "ROS_PATH=c:\opt\ros\noetic\x64" >> $env:GITHUB_ENV
      - name: Install foxy
        if: ${{ matrix.ros-distro  != 'noetic' }}
        run: |
          New-Item -ItemType Directory -Force -Path c:\opt\chocolatey
          set ChocolateyInstall=c:\opt\chocolatey
          dir c:\opt          
          choco config set cacheLocation c:\opt\chocolatey\cache
          choco source add -n=ros-win -s="https://aka.ms/ros/public" --priority=1
          choco upgrade ros-foxy-desktop -y --execution-timeout=0      --no-progress
          echo "ROS_PATH=c:\opt\ros\foxy\x64" >> $env:GITHUB_ENV

      - name: Run cmake
        run: |
          md c:\build-${{matrix.ros-distro}}-${{ matrix.build_type }}
          cd c:\build-${{matrix.ros-distro}}-${{ matrix.build_type }}
          ${{ env.ROS_PATH }}/setup.ps1
          pip install -U cmake
          cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_DEPTHAI=ON -B c:\build-${{matrix.ros-distro}}-${{ matrix.build_type }} -S ${{ github.workspace }}
          type c:\build-${{matrix.ros-distro}}-${{ matrix.build_type }}\CMakeCache.txt
          cmake --build c:\build-${{matrix.ros-distro}}-${{ matrix.build_type }} -t install --config ${{ matrix.build_type }}
      - name: Create artifacts (Release)
        uses: actions/upload-artifact@v3
        with:
          name: build-${{matrix.ros-distro}}-${{ matrix.build_type }}
          path: |
            c:\build-${{matrix.ros-distro}}-${{ matrix.build_type }}\install

