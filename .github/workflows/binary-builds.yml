name: Create and publish binaries

on:
  push:
    branches: ['develop']

jobs:
  build-and-push-ros-releases:
    strategy:
      fail-fast: false
      matrix:
        ros-distro: [ foxy, noetic ]
        build_type: [Release, RelWithDebInfo]
    runs-on: windows-2019
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            c:/opt/
            C:/.hunter
          key: ${{ runner.os }}-${{matrix.ros-distro}}-${{ matrix.build_type }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.ros-distro}}-${{ matrix.build_type }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.21.x'
      - name: Install noetic
        if: ${{ matrix.ros-distro  == 'noetic' }}
        run: |
          if (-not(Test-Path -Path c:\opt\ros\noetic\x64\setup.ps1 -PathType Leaf)) {
            New-Item -ItemType Directory -Force -Path c:\opt\chocolatey
            set ChocolateyInstall=c:\opt\chocolatey
            dir c:\opt
            choco config set cacheLocation c:\opt\chocolatey\cache
            choco source add -n=ros-win -s="https://aka.ms/ros/public" --priority=1
            choco upgrade ros-noetic-desktop_full -y --execution-timeout=0      --no-progress
          }
          echo "ROS_PATH=c:\opt\ros\noetic\x64" >> $env:GITHUB_ENV
      - name: Install foxy
        if: ${{ matrix.ros-distro  != 'noetic' }}
        run: |
          if (-not(Test-Path -Path c:\opt\ros\foxy\x64\setup.ps1 -PathType Leaf)) {
            New-Item -ItemType Directory -Force -Path c:\opt\chocolatey
            set ChocolateyInstall=c:\opt\chocolatey
            dir c:\opt          
            choco config set cacheLocation c:\opt\chocolatey\cache
            choco source add -n=ros-win -s="https://aka.ms/ros/public" --priority=1
            choco upgrade ros-foxy-desktop -y --execution-timeout=0      --no-progress
          }
          echo "ROS_PATH=c:\opt\ros\foxy\x64" >> $env:GITHUB_ENV
      - name: Run cmake
        run: |
          md ${{runner.workspace}}/build/
          cd ${{runner.workspace}}/build/
          ${{ env.ROS_PATH }}/setup.ps1
          pip install -U cmake
          cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_DEPTHAI=ON -B ${{runner.workspace}}/build/ -S ${{ github.workspace }}
          type ${{runner.workspace}}/build/\CMakeCache.txt
          cmake --build ${{runner.workspace}}/build/ -t install --config ${{ matrix.build_type }}

      - name: Set bundle name
        id: bundle
        run: echo "::set-output name=BUNDLE_FILE_NAME::depthai-tof-demo-$(git describe --tags --always)-${{ matrix.os }}.zip"

      - name: Bundle
        working-directory: ${{runner.workspace}}
        run: 7z a ${{runner.workspace}}/build/${{ steps.bundle.outputs.BUNDLE_FILE_NAME }} ${{runner.workspace}}/build/install

      - name: Create artifacts (Release)
        uses: actions/upload-artifact@v3
        with:
          name: build-${{matrix.ros-distro}}-${{ matrix.build_type }}
          path: |
            ${{runner.workspace}}/build/install
            ${{runner.workspace}}/build/${{ steps.bundle.outputs.BUNDLE_FILE_NAME }}

      - name: Get release
        id: get_release
        if: github.event_name == 'release'
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset
        continue-on-error: true
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{runner.workspace}}/build/${{steps.bundle.outputs.BUNDLE_FILE_NAME}}
          asset_name: ${{steps.bundle.outputs.BUNDLE_FILE_NAME}}
          asset_content_type: application/zip
